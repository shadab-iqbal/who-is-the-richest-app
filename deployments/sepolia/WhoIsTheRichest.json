{
  "address": "0x6BDAb2Cf6D93bFFFbFfC4aDc7d7b6eDF473294D5",
  "abi": [
    {
      "inputs": [],
      "name": "UserNotFound",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "userAddress",
          "type": "address"
        }
      ],
      "name": "UserRegister",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "userAddress",
          "type": "address"
        }
      ],
      "name": "UserUpdate",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "getAllUsers",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "userAddress",
              "type": "address"
            },
            {
              "internalType": "string",
              "name": "name",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "email",
              "type": "string"
            }
          ],
          "internalType": "struct WhoIsTheRichest.User[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getUsersCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "count",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_userAddress",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_email",
          "type": "string"
        }
      ],
      "name": "registerUser",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_userAddress",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_email",
          "type": "string"
        }
      ],
      "name": "updateUser",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "users",
      "outputs": [
        {
          "internalType": "address",
          "name": "userAddress",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "email",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "transactionHash": "0x1cf196361eb7ea9fe7182e92efa91f6a4971e586a941c82f7916a095c3291da6",
  "receipt": {
    "to": null,
    "from": "0xE3c38ffC12c325d728A0005EC5AD2292F29c65E9",
    "contractAddress": "0x6BDAb2Cf6D93bFFFbFfC4aDc7d7b6eDF473294D5",
    "transactionIndex": 19,
    "gasUsed": "1022687",
    "logsBloom": "0x
    "blockHash": "0x91fab541af54588093c071b0a23d0ded63c9fc38ffe7c8a9b853bdbd1ce5d471",
    "transactionHash": "0x1cf196361eb7ea9fe7182e92efa91f6a4971e586a941c82f7916a095c3291da6",
    "logs": [],
    "blockNumber": 3462730,
    "cumulativeGasUsed": "2487122",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 1,
  "solcInputHash": "a58034113b10cc843549d1f2d970796a",
  "metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"UserNotFound\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"userAddress\",\"type\":\"address\"}],\"name\":\"UserRegister\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"userAddress\",\"type\":\"address\"}],\"name\":\"UserUpdate\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"getAllUsers\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"userAddress\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"email\",\"type\":\"string\"}],\"internalType\":\"struct WhoIsTheRichest.User[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getUsersCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"count\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_userAddress\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_email\",\"type\":\"string\"}],\"name\":\"registerUser\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_userAddress\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_email\",\"type\":\"string\"}],\"name\":\"updateUser\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"users\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"userAddress\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"email\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/WhoIsTheRichest.sol\":\"WhoIsTheRichest\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/WhoIsTheRichest.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.4;\\r\\n\\r\\nerror UserNotFound();\\r\\n\\r\\ncontract WhoIsTheRichest {\\r\\n    struct User {\\r\\n        address userAddress;\\r\\n        string name;\\r\\n        string email;\\r\\n    }\\r\\n    User[] public users;\\r\\n\\r\\n    event UserRegister(address indexed userAddress);\\r\\n    event UserUpdate(address indexed userAddress);\\r\\n\\r\\n    function registerUser(address _userAddress, string memory _name, string memory _email) external {\\r\\n        users.push(User(_userAddress, _name, _email));\\r\\n        emit UserRegister(_userAddress);\\r\\n    }\\r\\n\\r\\n    function updateUser(address _userAddress, string memory _name, string memory _email) external {\\r\\n        bool updated = false;\\r\\n        // reading everytime from chain is expensive\\r\\n        User[] memory memory_users = users;\\r\\n        for (uint256 i = 0; i < memory_users.length; i++) {\\r\\n            if (memory_users[i].userAddress == _userAddress) {\\r\\n                users[i].name = _name;\\r\\n                users[i].email = _email;\\r\\n                updated = true;\\r\\n                emit UserUpdate(_userAddress);\\r\\n                break;\\r\\n            }\\r\\n        }\\r\\n        // more gas-efficient than \\\"require\\\"\\r\\n        if (!updated) revert UserNotFound();\\r\\n    }\\r\\n\\r\\n    function getAllUsers() external view returns (User[] memory) {\\r\\n        return (users);\\r\\n    }\\r\\n\\r\\n    function getUsersCount() external view returns (uint256 count) {\\r\\n        return users.length;\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0x6c9f64a48823a3762fb3411efaa342878ade5307e3852e0091b1406e853593fe\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50611192806100206000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c806310e8b22d1461005c578063365b98b214610078578063a4a1e263146100aa578063db0c87c9146100c8578063e2842d79146100e4575b600080fd5b61007660048036038101906100719190610a59565b610102565b005b610092600480360381019061008d9190610b1a565b610439565b6040516100a193929190610bd5565b60405180910390f35b6100b26105a3565b6040516100bf9190610c29565b60405180910390f35b6100e260048036038101906100dd9190610a59565b6105af565b005b6100ec6106c8565b6040516100f99190610db6565b60405180910390f35b60008080805480602002602001604051908101604052809291908181526020016000905b828210156102d257838290600052602060002090600302016040518060600160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016001820180546101af90610e07565b80601f01602080910402602001604051908101604052809291908181526020018280546101db90610e07565b80156102285780601f106101fd57610100808354040283529160200191610228565b820191906000526020600020905b81548152906001019060200180831161020b57829003601f168201915b5050505050815260200160028201805461024190610e07565b80601f016020809104026020016040519081016040528092919081815260200182805461026d90610e07565b80156102ba5780601f1061028f576101008083540402835291602001916102ba565b820191906000526020600020905b81548152906001019060200180831161029d57829003601f168201915b50505050508152505081526020019060010190610126565b50505050905060005b81518110156103fa578573ffffffffffffffffffffffffffffffffffffffff1682828151811061030e5761030d610e38565b5b60200260200101516000015173ffffffffffffffffffffffffffffffffffffffff16036103e757846000828154811061034a57610349610e38565b5b906000526020600020906003020160010190816103679190611013565b50836000828154811061037d5761037c610e38565b5b9060005260206000209060030201600201908161039a9190611013565b50600192508573ffffffffffffffffffffffffffffffffffffffff167f1d222b775a8ac40f88e57f60a9f9cef32825dee88b7d0a2e757e7dd2082cbe7760405160405180910390a26103fa565b80806103f290611114565b9150506102db565b5081610432576040517f670a68cc00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5050505050565b6000818154811061044957600080fd5b90600052602060002090600302016000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169080600101805461049290610e07565b80601f01602080910402602001604051908101604052809291908181526020018280546104be90610e07565b801561050b5780601f106104e05761010080835404028352916020019161050b565b820191906000526020600020905b8154815290600101906020018083116104ee57829003601f168201915b50505050509080600201805461052090610e07565b80601f016020809104026020016040519081016040528092919081815260200182805461054c90610e07565b80156105995780601f1061056e57610100808354040283529160200191610599565b820191906000526020600020905b81548152906001019060200180831161057c57829003601f168201915b5050505050905083565b60008080549050905090565b600060405180606001604052808573ffffffffffffffffffffffffffffffffffffffff16815260200184815260200183815250908060018154018082558091505060019003906000526020600020906003020160009091909190915060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010190816106679190611013565b50604082015181600201908161067d9190611013565b5050508273ffffffffffffffffffffffffffffffffffffffff167f0361d74fc16827043a0abbc44931d101a36f8a404257aff6dc5c6f07c46c9e2560405160405180910390a2505050565b60606000805480602002602001604051908101604052809291908181526020016000905b8282101561089857838290600052602060002090600302016040518060600160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160018201805461077590610e07565b80601f01602080910402602001604051908101604052809291908181526020018280546107a190610e07565b80156107ee5780601f106107c3576101008083540402835291602001916107ee565b820191906000526020600020905b8154815290600101906020018083116107d157829003601f168201915b5050505050815260200160028201805461080790610e07565b80601f016020809104026020016040519081016040528092919081815260200182805461083390610e07565b80156108805780601f1061085557610100808354040283529160200191610880565b820191906000526020600020905b81548152906001019060200180831161086357829003601f168201915b505050505081525050815260200190600101906106ec565b50505050905090565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006108e0826108b5565b9050919050565b6108f0816108d5565b81146108fb57600080fd5b50565b60008135905061090d816108e7565b92915050565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6109668261091d565b810181811067ffffffffffffffff821117156109855761098461092e565b5b80604052505050565b60006109986108a1565b90506109a4828261095d565b919050565b600067ffffffffffffffff8211156109c4576109c361092e565b5b6109cd8261091d565b9050602081019050919050565b82818337600083830152505050565b60006109fc6109f7846109a9565b61098e565b905082815260208101848484011115610a1857610a17610918565b5b610a238482856109da565b509392505050565b600082601f830112610a4057610a3f610913565b5b8135610a508482602086016109e9565b91505092915050565b600080600060608486031215610a7257610a716108ab565b5b6000610a80868287016108fe565b935050602084013567ffffffffffffffff811115610aa157610aa06108b0565b5b610aad86828701610a2b565b925050604084013567ffffffffffffffff811115610ace57610acd6108b0565b5b610ada86828701610a2b565b9150509250925092565b6000819050919050565b610af781610ae4565b8114610b0257600080fd5b50565b600081359050610b1481610aee565b92915050565b600060208284031215610b3057610b2f6108ab565b5b6000610b3e84828501610b05565b91505092915050565b610b50816108d5565b82525050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610b90578082015181840152602081019050610b75565b60008484015250505050565b6000610ba782610b56565b610bb18185610b61565b9350610bc1818560208601610b72565b610bca8161091d565b840191505092915050565b6000606082019050610bea6000830186610b47565b8181036020830152610bfc8185610b9c565b90508181036040830152610c108184610b9c565b9050949350505050565b610c2381610ae4565b82525050565b6000602082019050610c3e6000830184610c1a565b92915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b610c79816108d5565b82525050565b600082825260208201905092915050565b6000610c9b82610b56565b610ca58185610c7f565b9350610cb5818560208601610b72565b610cbe8161091d565b840191505092915050565b6000606083016000830151610ce16000860182610c70565b5060208301518482036020860152610cf98282610c90565b91505060408301518482036040860152610d138282610c90565b9150508091505092915050565b6000610d2c8383610cc9565b905092915050565b6000602082019050919050565b6000610d4c82610c44565b610d568185610c4f565b935083602082028501610d6885610c60565b8060005b85811015610da45784840389528151610d858582610d20565b9450610d9083610d34565b925060208a01995050600181019050610d6c565b50829750879550505050505092915050565b60006020820190508181036000830152610dd08184610d41565b905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680610e1f57607f821691505b602082108103610e3257610e31610dd8565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302610ec97fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82610e8c565b610ed38683610e8c565b95508019841693508086168417925050509392505050565b6000819050919050565b6000610f10610f0b610f0684610ae4565b610eeb565b610ae4565b9050919050565b6000819050919050565b610f2a83610ef5565b610f3e610f3682610f17565b848454610e99565b825550505050565b600090565b610f53610f46565b610f5e818484610f21565b505050565b5b81811015610f8257610f77600082610f4b565b600181019050610f64565b5050565b601f821115610fc757610f9881610e67565b610fa184610e7c565b81016020851015610fb0578190505b610fc4610fbc85610e7c565b830182610f63565b50505b505050565b600082821c905092915050565b6000610fea60001984600802610fcc565b1980831691505092915050565b60006110038383610fd9565b9150826002028217905092915050565b61101c82610b56565b67ffffffffffffffff8111156110355761103461092e565b5b61103f8254610e07565b61104a828285610f86565b600060209050601f83116001811461107d576000841561106b578287015190505b6110758582610ff7565b8655506110dd565b601f19841661108b86610e67565b60005b828110156110b35784890151825560018201915060208501945060208101905061108e565b868310156110d057848901516110cc601f891682610fd9565b8355505b6001600288020188555050505b505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061111f82610ae4565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203611151576111506110e5565b5b60018201905091905056fea26469706673582212201aed6952d57c6e07fdf1eadf8951c3bab6db1518d3b4b0c27fd55e2d7afb9fc764736f6c63430008110033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100575760003560e01c806310e8b22d1461005c578063365b98b214610078578063a4a1e263146100aa578063db0c87c9146100c8578063e2842d79146100e4575b600080fd5b61007660048036038101906100719190610a59565b610102565b005b610092600480360381019061008d9190610b1a565b610439565b6040516100a193929190610bd5565b60405180910390f35b6100b26105a3565b6040516100bf9190610c29565b60405180910390f35b6100e260048036038101906100dd9190610a59565b6105af565b005b6100ec6106c8565b6040516100f99190610db6565b60405180910390f35b60008080805480602002602001604051908101604052809291908181526020016000905b828210156102d257838290600052602060002090600302016040518060600160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016001820180546101af90610e07565b80601f01602080910402602001604051908101604052809291908181526020018280546101db90610e07565b80156102285780601f106101fd57610100808354040283529160200191610228565b820191906000526020600020905b81548152906001019060200180831161020b57829003601f168201915b5050505050815260200160028201805461024190610e07565b80601f016020809104026020016040519081016040528092919081815260200182805461026d90610e07565b80156102ba5780601f1061028f576101008083540402835291602001916102ba565b820191906000526020600020905b81548152906001019060200180831161029d57829003601f168201915b50505050508152505081526020019060010190610126565b50505050905060005b81518110156103fa578573ffffffffffffffffffffffffffffffffffffffff1682828151811061030e5761030d610e38565b5b60200260200101516000015173ffffffffffffffffffffffffffffffffffffffff16036103e757846000828154811061034a57610349610e38565b5b906000526020600020906003020160010190816103679190611013565b50836000828154811061037d5761037c610e38565b5b9060005260206000209060030201600201908161039a9190611013565b50600192508573ffffffffffffffffffffffffffffffffffffffff167f1d222b775a8ac40f88e57f60a9f9cef32825dee88b7d0a2e757e7dd2082cbe7760405160405180910390a26103fa565b80806103f290611114565b9150506102db565b5081610432576040517f670a68cc00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5050505050565b6000818154811061044957600080fd5b90600052602060002090600302016000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169080600101805461049290610e07565b80601f01602080910402602001604051908101604052809291908181526020018280546104be90610e07565b801561050b5780601f106104e05761010080835404028352916020019161050b565b820191906000526020600020905b8154815290600101906020018083116104ee57829003601f168201915b50505050509080600201805461052090610e07565b80601f016020809104026020016040519081016040528092919081815260200182805461054c90610e07565b80156105995780601f1061056e57610100808354040283529160200191610599565b820191906000526020600020905b81548152906001019060200180831161057c57829003601f168201915b5050505050905083565b60008080549050905090565b600060405180606001604052808573ffffffffffffffffffffffffffffffffffffffff16815260200184815260200183815250908060018154018082558091505060019003906000526020600020906003020160009091909190915060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010190816106679190611013565b50604082015181600201908161067d9190611013565b5050508273ffffffffffffffffffffffffffffffffffffffff167f0361d74fc16827043a0abbc44931d101a36f8a404257aff6dc5c6f07c46c9e2560405160405180910390a2505050565b60606000805480602002602001604051908101604052809291908181526020016000905b8282101561089857838290600052602060002090600302016040518060600160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160018201805461077590610e07565b80601f01602080910402602001604051908101604052809291908181526020018280546107a190610e07565b80156107ee5780601f106107c3576101008083540402835291602001916107ee565b820191906000526020600020905b8154815290600101906020018083116107d157829003601f168201915b5050505050815260200160028201805461080790610e07565b80601f016020809104026020016040519081016040528092919081815260200182805461083390610e07565b80156108805780601f1061085557610100808354040283529160200191610880565b820191906000526020600020905b81548152906001019060200180831161086357829003601f168201915b505050505081525050815260200190600101906106ec565b50505050905090565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006108e0826108b5565b9050919050565b6108f0816108d5565b81146108fb57600080fd5b50565b60008135905061090d816108e7565b92915050565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6109668261091d565b810181811067ffffffffffffffff821117156109855761098461092e565b5b80604052505050565b60006109986108a1565b90506109a4828261095d565b919050565b600067ffffffffffffffff8211156109c4576109c361092e565b5b6109cd8261091d565b9050602081019050919050565b82818337600083830152505050565b60006109fc6109f7846109a9565b61098e565b905082815260208101848484011115610a1857610a17610918565b5b610a238482856109da565b509392505050565b600082601f830112610a4057610a3f610913565b5b8135610a508482602086016109e9565b91505092915050565b600080600060608486031215610a7257610a716108ab565b5b6000610a80868287016108fe565b935050602084013567ffffffffffffffff811115610aa157610aa06108b0565b5b610aad86828701610a2b565b925050604084013567ffffffffffffffff811115610ace57610acd6108b0565b5b610ada86828701610a2b565b9150509250925092565b6000819050919050565b610af781610ae4565b8114610b0257600080fd5b50565b600081359050610b1481610aee565b92915050565b600060208284031215610b3057610b2f6108ab565b5b6000610b3e84828501610b05565b91505092915050565b610b50816108d5565b82525050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610b90578082015181840152602081019050610b75565b60008484015250505050565b6000610ba782610b56565b610bb18185610b61565b9350610bc1818560208601610b72565b610bca8161091d565b840191505092915050565b6000606082019050610bea6000830186610b47565b8181036020830152610bfc8185610b9c565b90508181036040830152610c108184610b9c565b9050949350505050565b610c2381610ae4565b82525050565b6000602082019050610c3e6000830184610c1a565b92915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b610c79816108d5565b82525050565b600082825260208201905092915050565b6000610c9b82610b56565b610ca58185610c7f565b9350610cb5818560208601610b72565b610cbe8161091d565b840191505092915050565b6000606083016000830151610ce16000860182610c70565b5060208301518482036020860152610cf98282610c90565b91505060408301518482036040860152610d138282610c90565b9150508091505092915050565b6000610d2c8383610cc9565b905092915050565b6000602082019050919050565b6000610d4c82610c44565b610d568185610c4f565b935083602082028501610d6885610c60565b8060005b85811015610da45784840389528151610d858582610d20565b9450610d9083610d34565b925060208a01995050600181019050610d6c565b50829750879550505050505092915050565b60006020820190508181036000830152610dd08184610d41565b905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680610e1f57607f821691505b602082108103610e3257610e31610dd8565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302610ec97fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82610e8c565b610ed38683610e8c565b95508019841693508086168417925050509392505050565b6000819050919050565b6000610f10610f0b610f0684610ae4565b610eeb565b610ae4565b9050919050565b6000819050919050565b610f2a83610ef5565b610f3e610f3682610f17565b848454610e99565b825550505050565b600090565b610f53610f46565b610f5e818484610f21565b505050565b5b81811015610f8257610f77600082610f4b565b600181019050610f64565b5050565b601f821115610fc757610f9881610e67565b610fa184610e7c565b81016020851015610fb0578190505b610fc4610fbc85610e7c565b830182610f63565b50505b505050565b600082821c905092915050565b6000610fea60001984600802610fcc565b1980831691505092915050565b60006110038383610fd9565b9150826002028217905092915050565b61101c82610b56565b67ffffffffffffffff8111156110355761103461092e565b5b61103f8254610e07565b61104a828285610f86565b600060209050601f83116001811461107d576000841561106b578287015190505b6110758582610ff7565b8655506110dd565b601f19841661108b86610e67565b60005b828110156110b35784890151825560018201915060208501945060208101905061108e565b868310156110d057848901516110cc601f891682610fd9565b8355505b6001600288020188555050505b505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061111f82610ae4565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203611151576111506110e5565b5b60018201905091905056fea26469706673582212201aed6952d57c6e07fdf1eadf8951c3bab6db1518d3b4b0c27fd55e2d7afb9fc764736f6c63430008110033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 14,
        "contract": "contracts/WhoIsTheRichest.sol:WhoIsTheRichest",
        "label": "users",
        "offset": 0,
        "slot": "0",
        "type": "t_array(t_struct(User)10_storage)dyn_storage"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_struct(User)10_storage)dyn_storage": {
        "base": "t_struct(User)10_storage",
        "encoding": "dynamic_array",
        "label": "struct WhoIsTheRichest.User[]",
        "numberOfBytes": "32"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_struct(User)10_storage": {
        "encoding": "inplace",
        "label": "struct WhoIsTheRichest.User",
        "members": [
          {
            "astId": 5,
            "contract": "contracts/WhoIsTheRichest.sol:WhoIsTheRichest",
            "label": "userAddress",
            "offset": 0,
            "slot": "0",
            "type": "t_address"
          },
          {
            "astId": 7,
            "contract": "contracts/WhoIsTheRichest.sol:WhoIsTheRichest",
            "label": "name",
            "offset": 0,
            "slot": "1",
            "type": "t_string_storage"
          },
          {
            "astId": 9,
            "contract": "contracts/WhoIsTheRichest.sol:WhoIsTheRichest",
            "label": "email",
            "offset": 0,
            "slot": "2",
            "type": "t_string_storage"
          }
        ],
        "numberOfBytes": "96"
      }
    }
  }
}